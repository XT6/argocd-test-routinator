apiVersion: apps/v1
kind: Deployment
metadata:
  name:  routinator
  namespace: default
  labels:
    app:  routinator
spec:
  selector:
    matchLabels:
      app: routinator
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app:  routinator
    spec:
      # initContainers:
        # Init containers are exactly like regular containers, except:
          # - Init containers always run to completion.
          # - Each init container must complete successfully before the next one starts.
      containers:
      - name:  routinator
        image:  nlnetlabs/routinator:latest
        args: ["--disable-rsync", "-v", "-r", "/tmp/cache",  "server", "--http", "0.0.0.0:8323", "--rtr", "0.0.0.0:3323"]
        resources:
          requests:
            cpu: 2000m
            memory: 2048Mi
          limits:
            cpu: 4000m
            memory: 4096Mi
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        #readinessProbe:
        #  httpGet:
        #    path: /_status/healthz
        #    port: 80
        #  initialDelaySeconds: 5
        #  timeoutSeconds: 2
        #  successThreshold: 1
        #  failureThreshold: 3
        #  periodSeconds: 10
        # env:
        #- name: DB_HOST
        #  valueFrom:
        #    configMapKeyRef:
        #      name: MYAPP
        #      key: DB_HOST
        ports:
        - containerPort:  8323
          name:  routinator-web
        - containerPort:  3323
          name:  routinator-rtr
        volumeMounts:
        - name: localtime
          mountPath: /etc/localtime
      volumes:
        - name: localtime
          hostPath:
            path: /usr/share/zoneinfo/America/Montevideo
      restartPolicy: Always
